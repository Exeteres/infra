version: "3"

includes:
  nixos:
    taskfile: ../nixos/Taskfile.yml
    dir: ../nixos
    internal: true

tasks:
  plan:*:
    desc: Generate and show an execution plan
    vars:
      INSTANCE: "{{index .MATCH 0}}"
    cmds:
      - task: nixos:prepare
      - defer: { task: nixos:cleanup }
      - tofu plan -var-file=.tfvars -out=tfplan {{.CLI_ARGS}}
    dir: "instances/{{.INSTANCE}}"

  import:*:
    desc: Import the existing resources into the state file
    vars:
      INSTANCE: "{{index .MATCH 0}}"
    cmds:
      - task: nixos:prepare
      - defer: { task: nixos:cleanup }
      - tofu import -var-file=.tfvars {{.CLI_ARGS}}
    dir: "instances/{{.INSTANCE}}"

  refresh:*:
    desc: Refresh the state file
    vars:
      INSTANCE: "{{index .MATCH 0}}"
    cmds:
      - task: nixos:prepare
      - defer: { task: nixos:cleanup }
      - tofu refresh -var-file=.tfvars
    dir: "instances/{{.INSTANCE}}"

  apply:*:
    desc: Apply the generated plan
    vars:
      INSTANCE: "{{index .MATCH 0}}"
    cmds:
      - task: nixos:prepare
      - defer: { task: nixos:cleanup }
      - tofu apply tfplan
    dir: "instances/{{.INSTANCE}}"

  init:*:
    desc: Initialize the Terraform workspace
    vars:
      INSTANCE: "{{index .MATCH 0}}"
    cmd: tofu init
    dir: "instances/{{.INSTANCE}}"

  plan-and-apply:*:
    desc: Generate and apply an execution plan
    vars:
      INSTANCE: "{{index .MATCH 0}}"
    cmds:
      - task: nixos:prepare
      - defer: { task: nixos:cleanup }
      - tofu plan -var-file=.tfvars -out=tfplan
      - tofu apply tfplan
    dir: "instances/{{.INSTANCE}}"

  destroy-and-apply:*:
    desc: Destroy and apply the resources
    prompt: Are you sure you want to destroy resources?
    vars:
      INSTANCE: "{{index .MATCH 0}}"
    cmds:
      - task: nixos:prepare
      - defer: { task: nixos:cleanup }
      - tofu destroy -var-file=.tfvars -auto-approve
    dir: "instances/{{.INSTANCE}}"
