// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

import {ObjectMeta} from "../meta/v1";

export namespace cilium {
    export namespace v2 {
        /**
         * Status is the status of the Cilium policy rule. 
         *  The reason this field exists in this structure is due a bug in the k8s code-generator that doesn't create a `UpdateStatus` method because the field does not exist in the structure.
         */
        export interface CiliumClusterwideNetworkPolicyStatusArgs {
            conditions?: pulumi.Input<pulumi.Input<inputs.cilium.v2.CiliumClusterwideNetworkPolicyStatusConditionsArgs>[]>;
            /**
             * DerivativePolicies is the status of all policies derived from the Cilium policy
             */
            derivativePolicies?: pulumi.Input<{[key: string]: pulumi.Input<inputs.cilium.v2.CiliumClusterwideNetworkPolicyStatusDerivativePoliciesArgs>}>;
        }

        export interface CiliumClusterwideNetworkPolicyStatusConditionsArgs {
            /**
             * The last time the condition transitioned from one status to another.
             */
            lastTransitionTime?: pulumi.Input<string>;
            /**
             * A human readable message indicating details about the transition.
             */
            message?: pulumi.Input<string>;
            /**
             * The reason for the condition's last transition.
             */
            reason?: pulumi.Input<string>;
            /**
             * The status of the condition, one of True, False, or Unknown
             */
            status: pulumi.Input<string>;
            /**
             * The type of the policy condition
             */
            type: pulumi.Input<string>;
        }

        /**
         * CiliumNetworkPolicyNodeStatus is the status of a Cilium policy rule for a specific node.
         */
        export interface CiliumClusterwideNetworkPolicyStatusDerivativePoliciesArgs {
            /**
             * Annotations corresponds to the Annotations in the ObjectMeta of the CNP that have been realized on the node for CNP. That is, if a CNP has been imported and has been assigned annotation X=Y by the user, Annotations in CiliumNetworkPolicyNodeStatus will be X=Y once the CNP that was imported corresponding to Annotation X=Y has been realized on the node.
             */
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * Enforcing is set to true once all endpoints present at the time the policy has been imported are enforcing this policy.
             */
            enforcing?: pulumi.Input<boolean>;
            /**
             * Error describes any error that occurred when parsing or importing the policy, or realizing the policy for the endpoints to which it applies on the node.
             */
            error?: pulumi.Input<string>;
            /**
             * LastUpdated contains the last time this status was updated
             */
            lastUpdated?: pulumi.Input<string>;
            /**
             * Revision is the policy revision of the repository which first implemented this policy.
             */
            localPolicyRevision?: pulumi.Input<number>;
            /**
             * OK is true when the policy has been parsed and imported successfully into the in-memory policy repository on the node.
             */
            ok?: pulumi.Input<boolean>;
        }

        /**
         * Status is the status of the Cilium policy rule
         */
        export interface CiliumNetworkPolicyStatusArgs {
            conditions?: pulumi.Input<pulumi.Input<inputs.cilium.v2.CiliumNetworkPolicyStatusConditionsArgs>[]>;
            /**
             * DerivativePolicies is the status of all policies derived from the Cilium policy
             */
            derivativePolicies?: pulumi.Input<{[key: string]: pulumi.Input<inputs.cilium.v2.CiliumNetworkPolicyStatusDerivativePoliciesArgs>}>;
        }

        export interface CiliumNetworkPolicyStatusConditionsArgs {
            /**
             * The last time the condition transitioned from one status to another.
             */
            lastTransitionTime?: pulumi.Input<string>;
            /**
             * A human readable message indicating details about the transition.
             */
            message?: pulumi.Input<string>;
            /**
             * The reason for the condition's last transition.
             */
            reason?: pulumi.Input<string>;
            /**
             * The status of the condition, one of True, False, or Unknown
             */
            status: pulumi.Input<string>;
            /**
             * The type of the policy condition
             */
            type: pulumi.Input<string>;
        }

        /**
         * CiliumNetworkPolicyNodeStatus is the status of a Cilium policy rule for a specific node.
         */
        export interface CiliumNetworkPolicyStatusDerivativePoliciesArgs {
            /**
             * Annotations corresponds to the Annotations in the ObjectMeta of the CNP that have been realized on the node for CNP. That is, if a CNP has been imported and has been assigned annotation X=Y by the user, Annotations in CiliumNetworkPolicyNodeStatus will be X=Y once the CNP that was imported corresponding to Annotation X=Y has been realized on the node.
             */
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            /**
             * Enforcing is set to true once all endpoints present at the time the policy has been imported are enforcing this policy.
             */
            enforcing?: pulumi.Input<boolean>;
            /**
             * Error describes any error that occurred when parsing or importing the policy, or realizing the policy for the endpoints to which it applies on the node.
             */
            error?: pulumi.Input<string>;
            /**
             * LastUpdated contains the last time this status was updated
             */
            lastUpdated?: pulumi.Input<string>;
            /**
             * Revision is the policy revision of the repository which first implemented this policy.
             */
            localPolicyRevision?: pulumi.Input<number>;
            /**
             * OK is true when the policy has been parsed and imported successfully into the in-memory policy repository on the node.
             */
            ok?: pulumi.Input<boolean>;
        }

    }
}
