// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { BackendTLSPolicyArgs } from "./backendTLSPolicy";
export type BackendTLSPolicy = import("./backendTLSPolicy").BackendTLSPolicy;
export const BackendTLSPolicy: typeof import("./backendTLSPolicy").BackendTLSPolicy = null as any;
utilities.lazyLoad(exports, ["BackendTLSPolicy"], () => require("./backendTLSPolicy"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:gateway.networking.k8s.io/v1alpha3:BackendTLSPolicy":
                return new BackendTLSPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gateway", "gateway.networking.k8s.io/v1alpha3", _module)
